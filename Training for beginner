create table #temp_Employee 
(EmployeeID int,
JobTitle varchar(100),
Salary int)

Select *
from #temp_Employee

Insert into #temp_Employee values
('1001', 'hr', '45000')

insert into #temp_Employee
select *
from EmployeeSalary

drop table if exists #temp_employee2
create table #temp_employee2 (
Jobtitle varchar (50),
EmployeePerJob int,
AvgAge int,
AvgSalary int)

insert into #temp_employee2
select jobtitle, count(jobtitle), avg(age), avg(salary)
from EmployeeDemographic demo
join EmployeeSalary sal
	on demo.EmployeeID = sal.EmployeeID
Group by jobtitle

select *
from #temp_employee2

CREATE TABLE EmployeeErrors (
EmployeeID varchar(50)
,FirstName varchar(50)
,LastName varchar(50)
)

Insert into EmployeeErrors Values 
('1001  ', 'Jimbo', 'Halbert')
,('  1002', 'Pamela', 'Beasely')
,('1005', 'TOby', 'Flenderson - Fired')

Select *
From EmployeeErrors

Select EmployeeID, trim(EmployeeID) as IDTRIM
from EmployeeErrors

Select EmployeeID, Ltrim(EmployeeID) as IDTRIM
from EmployeeErrors

Select EmployeeID, Rtrim(EmployeeID) as IDTRIM
from EmployeeErrors

SELECT Lastname, Replace (lastname, '- Fired', '') as lastnamefixed
from EmployeeErrors

SELECT substring(firstname,3,3)
from EmployeeErrors

SELECT err.FirstName, substring (err.FirstName,1,3), dem.FirstName, substring(dem.FirstName,1,3)
from EmployeeErrors err
join EmployeeDemographic dem
	on substring (err.FirstName,1,3) = substring(dem.FirstName,1,3)

-- use substring in gender, lastname, age, date of birth 

Select FirstName, LOWER(FIRSTNAME)
From EmployeeErrors

Select FirstName, upper(FIRSTNAME)
From EmployeeErrors
--store procedure

create procedure test
as
select *
from EmployeeDemographic

exec test


create procedure temp_procedure
as
create table #temp_employee (
Jobtitle varchar (50),
EmployeePerJob int,
AvgAge int,
AvgSalary int)

insert into #temp_employee
select jobtitle, count(jobtitle), avg(age), avg(salary)
from EmployeeDemographic demo
join EmployeeSalary sal
	on demo.EmployeeID = sal.EmployeeID
Group by jobtitle

select *
from #temp_employee

exec temp_procedure @jobtitle = 'Salesman'


-- subqueries

select *
from employeesalary

select EmployeeID, salary, (select avg (salary)from employeesalary) as allavgsalary
from employeesalary

select EmployeeID, salary, avg(salary) over () as allavgsalary
from employeesalary

select EmployeeID, salary, avg(salary) as allavgsalary
from employeesalary
group by employeeid, Salary
order by 1,2

select a.employeeid, allavgsalary
from (select EmployeeID, salary, avg(salary) over () as allavgsalary
	  from employeesalary) a

select EmployeeID, salary, JobTitle
from employeesalary
where EmployeeID in (
		select EmployeeID
		from EmployeeDemographic
		where age > 30)


portfolio project 
Select *
From CovidDeath

Select *
From CovidVaccination

Select location, date, total_cases, new_cases, total_deaths, population
From CovidDeath
order by 1, 2

ALTER TABLE CovidDeath
ALTER COLUMN total_cases float

ALTER TABLE CovidDeath
ALTER COLUMN total_deaths float

Select location, date, total_cases, total_deaths, (total_deaths / total_cases)*100 DeathPercatage
From CovidDeath
